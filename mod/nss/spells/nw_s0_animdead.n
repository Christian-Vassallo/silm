extern("x2_inc_spellhook")

/**
 * Determine one creature ResRef from available undead according caster level
 *
 * In general, available undead are equal to the highest Summon Monster spell
 * 2 caster levels below, i.e. at caster level 9, an undead equal to those
 * summoned by Summon Monster IV (CL7) is selected.
 */
string GetRandomAnimateDead(int nCasterLevel);

/**
 * Returns maximum number of controlled undead
 */
int GetUndeadControlLimit(object oCaster);

/**
 * Retrieves number of undead henchmen
 */
int GetControlledUndead(object oMaster);

void summon_set_events(object creature);

void main()
{
	if (!X2PreSpellCastCode())
		return;

	object oCaster = OBJECT_SELF;
	int nMeta = GetMetaMagicFeat();
	int nCasterLevel = GetCasterLevel(oCaster);
	float fDuration = HoursToSeconds(GetCasterLevel(oCaster));
	location lTarget = GetSpellTargetLocation();

	effect eVisual = EffectVisualEffect(VFX_FNF_SUMMON_UNDEAD);

	int nAmount = cfg_int("spell:animate_dead:max_per_casting", 3);
	int nControlledUndead = GetControlledUndead(oCaster);
	int nControlLimit = GetUndeadControlLimit(oCaster);

	int nth = 0;

	if (nMeta == METAMAGIC_EXTEND)
		fDuration = fDuration * 2;

	while (nth < nAmount && nControlledUndead < nControlLimit) {
		string sUndead = GetRandomAnimateDead(nCasterLevel);
		object oUndead = CreateObject(OBJECT_TYPE_CREATURE, sUndead, lTarget, FALSE);
		if (!GetIsObjectValid(oUndead)) {
			SendMessageToPC(oCaster, "Konnte ref '" + sUndead + "' nicht beschwoeren. (BUG!)");
		} else {
			location lPos = GetLocation(oUndead);
			ApplyEffectAtLocation(DURATION_TYPE_INSTANT, eVisual, lPos);

			AddHenchman(oCaster, oUndead);
			summon_set_events(oUndead);
			DestroyObject(oUndead, fDuration);
		}

		nControlledUndead++;
		nth++;
	}

	SendMessageToPC(oCaster, "Kontrollierte Untote: " + IntToString(nControlledUndead) + "/" +
					IntToString(nControlLimit));
}

int GetUndeadControlLimit(object oCaster)
{
	return GetCasterLevel(oCaster);
}

int GetControlledUndead(object oMaster)
{
	int nCount = 0;
	int nth = 1;

	object oAssociate = GetAssociate(ASSOCIATE_TYPE_HENCHMAN, oMaster, nth);

	while (GetIsObjectValid(oAssociate)) {
		if (GetRacialType(oAssociate) == RACIAL_TYPE_UNDEAD)
			nCount++;

		nth++;
		oAssociate = GetAssociate(ASSOCIATE_TYPE_HENCHMAN, oMaster, nth);
	}

	return nCount;
}

string GetRandomAnimateDead(int nCasterLevel)
{
	string sUndead;

	if (nCasterLevel < 7)
		sUndead = SRANDMEMBER(cfg_key("spell:animate_dead:cl7"));
	else if (nCasterLevel < 9)
		sUndead = SRANDMEMBER(cfg_key("spell:animate_dead:cl9"));
	else if (nCasterLevel < 11)
		sUndead = SRANDMEMBER(cfg_key("spell:animate_dead:cl11"));
	else
		sUndead = SRANDMEMBER(cfg_key("spell:animate_dead:default"));

	if (sUndead == "")
		sUndead = "goblin";

	return sUndead;
}

void summon_set_events(object creature)
{
	SetCreatureEventHandler(creature, CREATURE_EVENT_ATTACKED, "nw_ch_ac5");
	SetCreatureEventHandler(creature, CREATURE_EVENT_DAMAGED, "nw_ch_ac5");
	SetCreatureEventHandler(creature, CREATURE_EVENT_DEATH, "nw_ch_ac7");
	SetCreatureEventHandler(creature, CREATURE_EVENT_CONVERSATION, "nw_ch_ac4");
	SetCreatureEventHandler(creature, CREATURE_EVENT_DISTURBED, "nw_ch_ac8");
	SetCreatureEventHandler(creature, CREATURE_EVENT_ENDCOMBAT, "nw_ch_ac3");
	SetCreatureEventHandler(creature, CREATURE_EVENT_HEARTBEAT, "nw_ch_ac1");
	SetCreatureEventHandler(creature, CREATURE_EVENT_BLOCKED, "nw_ch_ace");
	SetCreatureEventHandler(creature, CREATURE_EVENT_PERCEPTION, "nw_ch_ac2");
	SetCreatureEventHandler(creature, CREATURE_EVENT_RESTED, "nw_ch_aca");
	SetCreatureEventHandler(creature, CREATURE_EVENT_SPAWN, "nw_ch_aca");
	SetCreatureEventHandler(creature, CREATURE_EVENT_SPELLCAST, "nw_ch_summon_9");
	SetCreatureEventHandler(creature, CREATURE_EVENT_USERDEF, "nw_ch_acb");
}

