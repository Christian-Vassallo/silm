//:://////////////////////////////////////////////////
//:: NW_C2_DEFAULT1
/*
 * Default OnHeartbeat script for NPCs.
 *
 * This script causes NPCs to perform default animations
 * while not otherwise engaged.
 *
 * This script duplicates the behavior of the default
 * script and just cleans up the code and removes
 * redundant conditional checks.
 *
 */
//:://////////////////////////////////////////////////
//:: Copyright (c) 2002 Floodgate Entertainment
//:: Created By: Naomi Novik
//:: Created On: 12/22/2002
//:://////////////////////////////////////////////////

extern("nw_i0_generic")
extern("inc_summonai")
extern("inc_scorco")
extern("inc_events")
extern("_gen")

void main() {

	// Event: creature_hb
	// Creature heartbeat. Runs on any non-player creature.
	// - stop
	int ret = RunEventScriptsFor(GetEventSerial(), "creature_hb", OBJECT_SELF, OBJECT_INVALID, OBJECT_INVALID, GetLocation(OBJECT_INVALID));
	if (ret & EVENT_RESULT_STOP)
		return;
	
	// * if not runnning normal or better Ai then exit for performance reasons
	if ( GetAILevel() == AI_LEVEL_VERY_LOW ) return;

	__nth(3,
		if (
			GetLocalInt(OBJECT_SELF, "sit_nearest")
			&& GetLocalInt(GetArea(OBJECT_SELF), "placies_loaded")
			&& (GetCurrentAction(OBJECT_SELF) == ACTION_INVALID || GetCurrentAction(OBJECT_SELF) == ACTION_WAIT)
		) {

			int n = 1;
			object oChair = GetNearestObject(OBJECT_TYPE_PLACEABLE, OBJECT_SELF, n);
			while ( GetIsObjectValid(oChair) ) {

				if (GetSittingCreature(oChair) == OBJECT_SELF)
					break;

				if ( GetDistanceBetween(OBJECT_SELF, oChair) > 30.0 )
					break;
				if (
					(
						GetStringLeft(GetResRef(oChair), 4 + 1 + 5) == "move_chair" ||
						GetResRef(oChair) == "chair" ||
						GetResRef(oChair) == "chair_invisible"
					) && !GetIsObjectValid(GetSittingCreature(oChair))
				) {
					AssignCommand(OBJECT_SELF, ActionSit(oChair));
					break;
				}

				n += 1;
				oChair = GetNearestObject(OBJECT_TYPE_PLACEABLE, OBJECT_SELF, n);
			}
		}
	);
	
	if (GetLocalInt(OBJECT_SELF, "sit_nearest") == 2) {
		SetLocalInt(OBJECT_SELF, "sit_nearest", 0);
		return;
	}

	if (GetLocalInt(OBJECT_SELF, "sit_nearest"))
		return;

	if (gvGetInt("persist_critters") && !GetIsPC(OBJECT_SELF) && p_id(OBJECT_SELF)) {
		// Only save every two minutes at most
		if (lv_i(OBJECT_SELF, "p_hb_cycle") >= 20)
			slv_i(OBJECT_SELF, "p_hb_cycle", 0);

		if (lv_i(OBJECT_SELF, "p_hb_cycle") == 0)
			p_save("critters", OBJECT_SELF);
		
		slv_i(OBJECT_SELF, "p_hb_cycle", lv_i(OBJECT_SELF, "p_hb_cycle") + 1);
	}


	// Buff ourselves up right away if we should
	if ( GetSpawnInCondition(NW_FLAG_FAST_BUFF_ENEMY) ) {
		// This will return TRUE if an enemy was within 40.0 m
		// and we buffed ourselves up instantly to respond --
		// simulates a spellcaster with protections enabled
		// already.
		if ( TalentAdvancedBuff(40.0) ) {
			// This is a one-shot deal
			SetSpawnInCondition(NW_FLAG_FAST_BUFF_ENEMY, FALSE);

			// This return means we skip sending the user-defined
			// heartbeat signal in this one case.
			return;
		}
	}


	if ( GetHasEffect(EFFECT_TYPE_SLEEP) ) {
		// If we're asleep and this is the result of sleeping
		// at night, apply the floating 'z's visual effect
		// every so often

		if ( GetSpawnInCondition(NW_FLAG_SLEEPING_AT_NIGHT) ) {
			effect eVis = EffectVisualEffect(VFX_IMP_SLEEP);
			if ( d10() > 6 ) {
				ApplyEffectToObject(DURATION_TYPE_INSTANT, eVis, OBJECT_SELF);
			}
		}
	}
	// If we have the 'constant' waypoints flag set, walk to the next
	// waypoint.
	else if ( GetWalkCondition(NW_WALK_FLAG_CONSTANT) ) {
		WalkWayPoints();
	}
	//Support for unwillingly summoned creature
	else if ( !GetIsInCombat() && GetShouldFollow() )
		MoveToMaster();

	else if ( GetBehaviorState(NW_FLAG_BEHAVIOR_SPECIAL)
			 || GetBehaviorState(NW_FLAG_BEHAVIOR_OMNIVORE)
			 || GetBehaviorState(NW_FLAG_BEHAVIOR_HERBIVORE)
			 || GetBehaviorState(NW_FLAG_BEHAVIOR_SHY) ) {
		// This handles special attacking/fleeing behavior
		// for omnivores & herbivores.
		DetermineSpecialBehavior();
	}
	// Check to see if we should be playing default animations
	// - make sure we don't have any current targets
	else if ( !GetIsObjectValid(GetAttemptedAttackTarget())
			 && !GetIsObjectValid(GetAttemptedSpellTarget())
			 // && !GetIsPostOrWalking())
			 && !GetIsObjectValid(GetNearestSeenEnemy()) ) {
		if ( !IsInConversation(OBJECT_SELF) ) {
			if ( GetSpawnInCondition(NW_FLAG_AMBIENT_ANIMATIONS)
				|| GetSpawnInCondition(NW_FLAG_AMBIENT_ANIMATIONS_AVIAN)
				|| GetIsEncounterCreature() ) {
				PlayMobileAmbientAnimations();
			} else if ( GetSpawnInCondition(NW_FLAG_IMMOBILE_AMBIENT_ANIMATIONS) ) {
				PlayImmobileAmbientAnimations();
			}
		}
	}

	ExecuteScript("hb_running", OBJECT_SELF);
	// Send the user-defined event signal if specified
	if ( GetSpawnInCondition(NW_FLAG_HEARTBEAT_EVENT) ) {
		SignalEvent(OBJECT_SELF, EventUserDefined(EVENT_HEARTBEAT));
	}

}

