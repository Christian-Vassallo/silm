extern("_gen")
extern("inc_chat")
// extern("inc_target")
extern("inc_colors")
extern("inc_limbo")
// extern("inc_scorco")
extern("inc_perception")


const int
MAX_VFX_EFFECT_ID = 2048;     //XXX: would be better to read it over 2da?

const int
OK = 0,
NOTFOUND = 1,
SYNTAX = 2,
FAIL = 3,
ACCESS = 4;


void setsleep(float fWait);

float getsleep();

void setsleep(float fWait)
{
	SetLocalFloat(GetModule(), "cmd_sleep", fWait);
}

float getsleep()
{
	return GetLocalFloat(GetModule(), "cmd_sleep");
}


// Makes oObject speak sText with the given iMode.
// Tries really hard that some text appears for clients;
// e.g. if its an inventory item, the container speaks.
void SpeakToMode(object oObject, string sText, int iMode);

void FixFactionsForObject(object oO, object oPC = OBJECT_SELF);


void ChatHookAudit(object oPC = OBJECT_SELF, int bSuppress = TRUE, string sData = "");


void SpeakToMode(object oObject, string sText, int iMode)
{
	if ("" == sText)
		return; // SIGSEGV :D

	if (iMode & CHATMODE_DM_MODE)
		iMode -= CHATMODE_DM_MODE;

	_DEBUG("chat", 2, "speaktomode(" + otoa(oObject) + ", " + itoa(iMode) + "): enter");

	object speaker = oObject;
	string prefix = "";

	_DEBUG("chat", 2, "speaktomode():itempossessor(speaker)? " + otoa(GetItemPossessor(speaker)));

	// If its owned by a inventory, use THAT to speak.
	if (is_item(speaker) && GetIsObjectValid(GetItemPossessor(speaker))) {
		speaker = GetItemPossessor(speaker);
		_DEBUG("chat", 2, "speaktomode():itemposessor -> yes");
		prefix = "(" + GetName(oObject) + ") ";
	}

	// If its a trigger, then we need to spawn some invisible wobbit to do the talking.
	if (is_trigger(speaker)) {
		_DEBUG("chat", 2, "speaktomode():is_trigger");
		object oinvis = CreateObject(OBJECT_TYPE_PLACEABLE, "invisobj", GetLocation(speaker));
		speaker = oinvis;
		DelayCommand(4.0f, DestroyObject(oinvis));
	}

	sText = prefix + sText;

	switch (iMode) {
	case CHATMODE_TALK:
		AssignCommand(speaker, SpeakString(sText, TALKVOLUME_TALK));
		break;

	case CHATMODE_WHISPER:
		AssignCommand(speaker, SpeakString(sText, TALKVOLUME_WHISPER));
		break;

	case CHATMODE_SHOUT:
		AssignCommand(speaker, SpeakString(sText, TALKVOLUME_SHOUT));
		break;

	case CHATMODE_DM:
		SendMessageToAllDMs(GetName(oObject) + ": " + sText);
		break;

	default:
		_WARN("Invalid call to SpeakToMode with mode " + itoa(iMode) + ", text was: " + sText);
		break;
	}
}



void ChatHookAudit(object oPC = OBJECT_SELF, int bSuppress = TRUE, string sData = "")
{
	SetLocalInt(oPC, "chat_suppress_audit", bSuppress == TRUE);
	SetLocalString(oPC, "chat_data_audit", sData);
}



void FixFactionsForObject(object oO, object oPC = OBJECT_SELF)
{
	/*
	 * legion 50   sl_bogenschuetze
	 * gabelb 50
	 * schach 50   c_gamemaster
	 * liebe 100
	 * zhent 50
	 * gnolle 0
	 * grottenschrate 0
	 * morueme 0
	 * tausend f 0
	 * rote kl 100 rk_gustav
	 * shadovar 50
	 * feuerkralle 0 fk_elitekrieger
	 * tiere 50
	 * orks 0
	 */

	SendMessageToPC(oPC, "Vorher");
	SendMessageToPC(oPC, " Buergerlich: " +
					IntToString(GetStandardFactionReputation(STANDARD_FACTION_COMMONER, oO)));
	SendMessageToPC(oPC, " Verteidiger: " +
					IntToString(GetStandardFactionReputation(STANDARD_FACTION_DEFENDER, oO)));
	SendMessageToPC(oPC, " Haendler: " +
					IntToString(GetStandardFactionReputation(STANDARD_FACTION_MERCHANT, oO)));
	SendMessageToPC(oPC, " Feindlich: " +
					IntToString(GetStandardFactionReputation(STANDARD_FACTION_HOSTILE, oO)));

	/* First, the standard factions */
	SetStandardFactionReputation(STANDARD_FACTION_HOSTILE, 0, oO);
	SetStandardFactionReputation(STANDARD_FACTION_COMMONER, 100, oO);
	SetStandardFactionReputation(STANDARD_FACTION_DEFENDER, 100, oO);
	SetStandardFactionReputation(STANDARD_FACTION_MERCHANT, 100, oO);

	SendMessageToPC(oPC, "Nachher");
	SendMessageToPC(oPC, " Buergerlich: " +
					IntToString(GetStandardFactionReputation(STANDARD_FACTION_COMMONER, oO)));
	SendMessageToPC(oPC, " Verteidiger: " +
					IntToString(GetStandardFactionReputation(STANDARD_FACTION_DEFENDER, oO)));
	SendMessageToPC(oPC, " Haendler: " +
					IntToString(GetStandardFactionReputation(STANDARD_FACTION_MERCHANT, oO)));
	SendMessageToPC(oPC, " Feindlich: " +
					IntToString(GetStandardFactionReputation(STANDARD_FACTION_HOSTILE, oO)));


	object wLimbo = GetObjectByTag(LIMBO_WAYPOINT);
	location lLimbo = GetLocation(wLimbo);
	object oA;

	if (!GetIsObjectValid(wLimbo)) {
		SendMessageToAllDMs(
			"Warning, Limbo waypoint is broken. /fixfactions will not work properly for custom factions.");
		return;
	}

	/* now our own factions as listed above */

	// Legion
	oA = CreateObject(OBJECT_TYPE_CREATURE, "sl_bogenschuetze", lLimbo);
	SendMessageToPC(oPC, "V: Legion: " + IntToString(GetReputation(oA, oO)));
	AdjustReputation(oO, oA, 50 - GetReputation(oA, oO));
	SendMessageToPC(oPC, "N: Legion: " + IntToString(GetReputation(oA, oO)));
	DelayCommand(1.0, DestroyObject(oA));

	// Schach
	oA = CreateObject(OBJECT_TYPE_CREATURE, "c_gamemaster", lLimbo);
	SendMessageToPC(oPC, "V: Schach: " + IntToString(GetReputation(oA, oO)));
	AdjustReputation(oO, oA, 50 - GetReputation(oA, oO));
	SendMessageToPC(oPC, "N: Schach: " + IntToString(GetReputation(oA, oO)));
	DelayCommand(1.1, DestroyObject(oA));

	// rotekl
	oA = CreateObject(OBJECT_TYPE_CREATURE, "rk_gustav", lLimbo);
	SendMessageToPC(oPC, "V: Rote Klinge: " + IntToString(GetReputation(oA, oO)));
	AdjustReputation(oO, oA, 100 - GetReputation(oA, oO));
	SendMessageToPC(oPC, "N: Rote Klinge: " + IntToString(GetReputation(oA, oO)));
	DelayCommand(1.2, DestroyObject(oA));

	// feuerk
	oA = CreateObject(OBJECT_TYPE_CREATURE, "fk_elitekrieger", lLimbo);
	SendMessageToPC(oPC, "V: Feuerkrallen: " + IntToString(GetReputation(oA, oO)));
	AdjustReputation(oO, oA, 0 - GetReputation(oA, oO));
	SendMessageToPC(oPC, "N: Feuerkrallen: " + IntToString(GetReputation(oA, oO)));
	DelayCommand(1.3, DestroyObject(oA));

	// animals
	oA = CreateObject(OBJECT_TYPE_CREATURE, "reh", lLimbo);
	SendMessageToPC(oPC, "V: Tiere: " + IntToString(GetReputation(oA, oO)));
	AdjustReputation(oO, oA, 50 - GetReputation(oA, oO));
	SendMessageToPC(oPC, "N: Tiere: " + IntToString(GetReputation(oA, oO)));
	DelayCommand(1.4, DestroyObject(oA));

	SendMessageToPC(oPC, "Fertig.");
}
