#include "inc_dcont.nh"
extern("inc_inventory")

/*
Limitations:
 int dcont_max_item_size - maximum item size in fields
 int dcont_max_total_size - maximum size of all items in container (stackables count as number of stacksize items)
 int dcont_max_total_weight - total weight this container will hold
*/

bool fits_into_container(object container, object item)
{
	object activator = dcont_get_activator(container);
	int item_size = GetItemSize(item);

	int max_item_size = GetLocalInt(activator, "dcont_max_item_size");
	int max_total_size = GetLocalInt(activator, "dcont_max_total_size");
	int max_total_weight = GetLocalInt(activator, "dcont_max_total_weight");

	if (max_total_size && (item_size > max_total_size
						   || GetTotalContainerItemSizeSum(container) + item_size > max_total_size))
		return false;

	if (max_item_size && item_size > max_item_size)
		return false;

	if (max_total_weight && GetWeight(container) + GetWeight(item) > max_total_weight)
		return false;

	return true;
}

void print_container_stats(object pc, object container)
{
	int count = 0;
	float weight = 0f;
	iterate_inventory(container, oIterate, count += GetItemStackSize(oIterate);
					  weight += GetWeight(oIterate););
	SendMessageToPC(pc, "Gegenstaende eingelagert: " + itoa(count));
	SendMessageToPC(pc, "Gesamtes Gewicht eingelagert: " + ftoa(weight));
}

void main()
{
	struct EventInfo e = GetEventInfo();

	if ("item_activate" == e.ev) {
		object pc = e.actor;
		object activator = e.runnable;
		object container = OBJECT_INVALID;

		if (!dcont_is_activator(activator))
			return;

		container = dcont_open(activator, container, e.actor);

		if (!is_valid(container)) {
			_ERROR("proxy failed to spawn.");
			return;
		}

		AssignCommand(pc, ActionInteractObject(container));
	}

	if ("placeable_open" == e.ev) {

		if (dcont_is_activator(e.runnable)) {
			object activator = e.runnable;
			object container = e.runnable;

			dcont_open(activator, container, e.actor);
		}

		if (dcont_is_proxy(e.runnable)) {
			dcont_handle_proxy_open(e.runnable);
			print_container_stats(e.actor, e.runnable);
		}
	}

	if ("placeable_closed" == e.ev) {
		if (dcont_is_proxy(e.runnable))
			dcont_handle_proxy_close(e.runnable);
	}

	if ("placeable_disturbed" == e.ev) {
		object activator = OBJECT_INVALID;
		object container = e.runnable;

		if (dcont_is_proxy(container)) {
			activator = dcont_get_activator(container);

			switch (GetInventoryDisturbType()) {
			case INVENTORY_DISTURB_TYPE_ADDED:
				if ((is_item(activator) && activator == GetInventoryDisturbItem())
						|| !fits_into_container(container, GetInventoryDisturbItem())) {
					AssignCommand(container, ActionGiveItem(GetInventoryDisturbItem(), e.actor));
					SendMessageToPC(e.actor, "Das passt hier nicht rein.");
					return;
				}

				break;
			}

			// Check container weight

			dcont_handle_event(activator, container, GetInventoryDisturbType(), GetInventoryDisturbItem());
			print_container_stats(e.actor, container);
		}
	}

}
