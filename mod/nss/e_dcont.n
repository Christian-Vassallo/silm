#include "inc_dcont.nh"
extern("inc_inventory")

void main() {
	struct EventInfo e = GetEventInfo();

	if ("item_activate" == e.ev) {
		object pc = e.actor;
		object activator = e.runnable;
		object container = OBJECT_INVALID;
		if (!dcont_is_activator(activator))
			return;

		container = dcont_open(activator, container, e.actor);
		if (!is_valid(container)) {
			_ERROR("proxy failed to spawn.");
			return;
		}

		AssignCommand(pc, ActionInteractObject(container));
	}

	if ("placeable_open" == e.ev) {

		if (dcont_is_activator(e.runnable)) {
			object activator = e.runnable;
			object container = e.runnable;

			dcont_open(activator, container, e.actor);
		}

		if (dcont_is_proxy(e.runnable)) {
			dcont_handle_proxy_open(e.runnable);

			int count = 0; float weight = 0f;
			iterate_inventory(e.runnable, count += GetItemStackSize(oIterate); weight += GetWeight(oIterate););
			SendMessageToPC(e.actor, "Gegenstaende eingelagert: " + itoa(count));
			SendMessageToPC(e.actor, "Gesamtes Gewicht eingelagert: " + ftoa(weight));
		}
	}

	if ("placeable_closed" == e.ev) {
		if (dcont_is_proxy(e.runnable))
			dcont_handle_proxy_close(e.runnable);
	}

	if ("placeable_disturbed" == e.ev) {
		object activator = OBJECT_INVALID;
		object container = e.runnable;

		if (dcont_is_proxy(container))
			dcont_handle_event(activator, container, GetInventoryDisturbType(), GetInventoryDisturbItem());
	}

}
