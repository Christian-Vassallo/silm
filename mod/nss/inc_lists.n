/*
File: inc_lists.n

Generic list and conversation choice table handling.
*/

const int
DISPLAYMODE_NORMAL = 0,
DISPLAYMODE_GREEN = 1,
DISPLAYMODE_RED = -1;

// Returns the selected list item.
int GetListSelection(object oPC);

// Clears a list from the object
void ClearList(object oHolder, string sListTag);

// Clears menu level?
void ClearMenuLevel(object oHolder, string sListTag, int nLevel);

int GetMenuLevel(object oHolder, string sListTag, int nLevel);

void SetMenuLevel(object oHolder, string sListTag, int nLevel, int nValue);

//Returns the number of elements in the list
int GetListCount(object oHolder, string sListTag);

//Adds an item to the list. 'ListTitle' would show up in the conversation
void AddListItem(object oHolder, string sListTag, string sListTitle);

void SetListInt(object oHolder, string sListTag, int iValue);

void SetListString(object oHolder, string sListTag, string sValue);

void SetListLocation(object oHolder, string sListTag, location lValue);

void SetListObject(object oHolder, string sListTag, object oValue);

void SetListFloat(object oHolder, string sListTag, float fValue);

//With the proper dialogue tree, iDispMode > 0 means the entry is shown in green,
// < 0 means the entry is shown in red
void SetListDisplayMode(object oHolder, string sListTag, int iDispMode, int iInd = -1);

int GetListInt(object oHolder, string sListTag, int iEntry);

string GetListString(object oHolder, string sListTag, int iEntry);

location GetListLocation(object oHolder, string sListTag, int iEntry);

object GetListObject(object oHolder, string sListTag, int iEntry);

float GetListFloat(object oHolder, string sListTag, int iEntry);

int GetListDisplayMode(object oHolder, string sListTag, int iEntry);

//Start a new selection list
void ResetConvList(object oPC, object oHolder, string sListTag, int iStartToken,
				   string sCallback = "",
				   string sHeading = "", string sProceed = "", string sPrCap = "Weiter", string sRevert = "",
				   string sRevCap = "Zurueck");

//Build up the current conversation page
void BuildConvListPage(object oPC);

int HasNextPage(object oPC);

int HasPrevPage(object oPC);

void SwitchPage(object oPC, int iDirection = 0);

int GetConvListEntry(object oPC, int iIndex);

/*
Section: Usage example
: void
*/

/* implementation */

void ClearMenuLevel(object oHolder, string sListTag, int nLevel)
{
	SetLocalInt(oHolder, sListTag + "_m" + IntToString(nLevel), 0);
}

int GetMenuLevel(object oHolder, string sListTag, int nLevel)
{
	return GetLocalInt(oHolder, sListTag + "_m" + IntToString(nLevel));
}

void SetMenuLevel(object oHolder, string sListTag, int nLevel, int nValue)
{
	SetLocalInt(oHolder, sListTag + "_m" + IntToString(nLevel), nValue);
}



int GetListSelection(object oPC)
{
	return GetLocalInt(oPC, "ConvList_Select");
}

void ClearList(object oHolder, string sListTag)
{
	DeleteLocalInt(oHolder, sListTag + "_count");
}

int GetListCount(object oHolder, string sListTag)
{
	return GetLocalInt(oHolder, sListTag + "_count");
}

void AddListItem(object oHolder, string sListTag, string sListTitle)
{
	int iNum = GetListCount(oHolder, sListTag);

	SetLocalInt(oHolder, sListTag + "_count", iNum + 1);

	SetLocalString(oHolder, sListTag + "_title_" + IntToString(iNum), sListTitle);
	DeleteLocalInt(oHolder, sListTag + "_dpm_" + IntToString(iNum));
}

void SetListInt(object oHolder, string sListTag, int iValue)
{
	int iNum = GetListCount(oHolder, sListTag);

	SetLocalInt(oHolder, sListTag + "_int_" + IntToString(iNum - 1), iValue);
}

void SetListString(object oHolder, string sListTag, string sValue)
{
	int iNum = GetListCount(oHolder, sListTag);

	SetLocalString(oHolder, sListTag + "_str_" + IntToString(iNum - 1), sValue);
}

void SetListLocation(object oHolder, string sListTag, location lValue)
{
	int iNum = GetListCount(oHolder, sListTag);

	SetLocalLocation(oHolder, sListTag + "_loc_" + IntToString(iNum - 1), lValue);
}

void SetListObject(object oHolder, string sListTag, object oValue)
{
	int iNum = GetListCount(oHolder, sListTag);

	SetLocalObject(oHolder, sListTag + "_obj_" + IntToString(iNum - 1), oValue);
}

void SetListFloat(object oHolder, string sListTag, float fValue)
{
	int iNum = GetListCount(oHolder, sListTag);

	SetLocalFloat(oHolder, sListTag + "_flt_" + IntToString(iNum - 1), fValue);
}

void SetListDisplayMode(object oHolder, string sListTag, int iDispMode, int iInd = -1)
{
	int iNum = GetListCount(oHolder, sListTag);

	if (iInd > -1)
		iNum = iInd + 1;

	SetLocalInt(oHolder, sListTag + "_dpm_" + IntToString(iNum - 1), iDispMode);
}

int GetListInt(object oHolder, string sListTag, int iEntry)
{
	return GetLocalInt(oHolder, sListTag + "_int_" + IntToString(iEntry));
}

string GetListString(object oHolder, string sListTag, int iEntry)
{
	return GetLocalString(oHolder, sListTag + "_str_" + IntToString(iEntry));
}

location GetListLocation(object oHolder, string sListTag, int iEntry)
{
	return GetLocalLocation(oHolder, sListTag + "_loc_" + IntToString(iEntry));
}

object GetListObject(object oHolder, string sListTag, int iEntry)
{
	return GetLocalObject(oHolder, sListTag + "_obj_" + IntToString(iEntry));
}

float GetListFloat(object oHolder, string sListTag, int iEntry)
{
	return GetLocalFloat(oHolder, sListTag + "_flt_" + IntToString(iEntry));
}

int GetListDisplayMode(object oHolder, string sListTag, int iEntry)
{
	return GetLocalInt(oHolder, sListTag + "_dpm_" + IntToString(iEntry));
}

void ResetConvList(object oPC, object oHolder, string sListTag, int iStartToken,
				   string sCallback = "",
				   string sHeading = "", string sProceed = "", string sPrCap = "Weiter", string sRevert = "",
				   string sRevCap = "Zurueck")
{
	DeleteLocalInt(oPC, "ConvList_CP");
	SetLocalInt(oPC, "ConvList_StT", iStartToken);
	SetLocalObject(oPC, "ConvList_Holder", oHolder);
	SetLocalString(oPC, "ConvList_Tag", sListTag);
	SetLocalInt(oPC, "ConvList_Select", -1);
	SetLocalString(oPC, "ConvList_Callback", sCallback);
	SetLocalString(oPC, "ConvList_Heading", sHeading);
	SetLocalString(oPC, "ConvList_Proceed", sProceed);
	SetLocalString(oPC, "ConvList_PrCap", sPrCap);
	SetLocalString(oPC, "ConvList_Revert", sRevert);
	SetLocalString(oPC, "ConvList_RevCap", sRevCap);
}

void BuildConvListPage(object oPC)
{
	int iStartToken = GetLocalInt(oPC, "ConvList_StT");
	int iCurrent = GetLocalInt(oPC, "ConvList_CP");
	object oHolder = GetLocalObject(oPC, "ConvList_Holder");
	string sListTag = GetLocalString(oPC, "ConvList_Tag");

	SetCustomToken(iStartToken + 10, GetLocalString(oPC, "ConvList_Heading"));

	/*  int i;
	 *
	 * for(i=0;i<10;i++)
	 * 	SetCustomToken(iStartToken+i,
	 * 	 GetLocalString(oHolder,sListTag+"_title_"+IntToString(i+iCurrent)));
	 */
	SetLocalInt(oPC, "ConvList_Current", iCurrent);
	DeleteLocalInt(oPC, "ConvList_Current2");
}

int HasNextPage(object oPC)
{
	int iStartToken = GetLocalInt(oPC, "ConvList_StT");
	int iCurrent = GetLocalInt(oPC, "ConvList_CP");
	object oHolder = GetLocalObject(oPC, "ConvList_Holder");
	string sListTag = GetLocalString(oPC, "ConvList_Tag");

	return GetListCount(oHolder, sListTag) > iCurrent + 10;
}

int HasPrevPage(object oPC)
{
	return GetLocalInt(oPC, "ConvList_CP") > 0;
}

void SwitchPage(object oPC, int iDirection = 0)
{
	int iCurrent = GetLocalInt(oPC, "ConvList_CP");
	SetLocalInt(oPC, "ConvList_CP", iCurrent + iDirection * 10);
}

int GetConvListEntry(object oPC, int iIndex)
{
	return iIndex + GetLocalInt(oPC, "ConvList_CP");
}

