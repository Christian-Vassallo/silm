extern("inc_misc")

int GetBestEquippableSlot(object creature, object item) {
	int mask = HexToInt(Get2DAString("baseitems", "EquipableSlots", GetBaseItemType(item)));
	if (mask & 0x00001)
		return INVENTORY_SLOT_HEAD;
	if (mask & 0x00002)
		return INVENTORY_SLOT_CHEST;
	if (mask & 0x00004)
		return INVENTORY_SLOT_BOOTS;
	if (mask & 0x00008)
		return INVENTORY_SLOT_ARMS;
	if (mask & 0x00010)
		return INVENTORY_SLOT_RIGHTHAND;
	if (mask & 0x00020)
		return INVENTORY_SLOT_LEFTHAND;
	if (mask & 0x00040)
		return INVENTORY_SLOT_CLOAK;
	if (mask & 0x00180) {
		if (is_valid(GetItemInSlot(INVENTORY_SLOT_RIGHTRING)))
			return INVENTORY_SLOT_LEFTRING;
		else
			return INVENTORY_SLOT_RIGHTRING;
	}
	if (mask & 0x00200)
		return INVENTORY_SLOT_NECK;
	if (mask & 0x00400)
		return INVENTORY_SLOT_BELT;
	if (mask & 0x00800)
		return INVENTORY_SLOT_ARROWS;
	if (mask & 0x01000)
		return INVENTORY_SLOT_BULLETS;
	if (mask & 0x02000)
		return INVENTORY_SLOT_BOLTS;

	// 0x1c000: cweapon
	// 0x20000: carmor

	return -1; // INVENTORY_SLOT_INVALID;
}

bool is_cursed(object item, int subtype = -1) {
	itemproperty p = GetFirstItemProperty(item);
	while (GetIsItemPropertyValid(p)) {
		if (GetItemPropertyType(p) == ITEM_PROPERTY_CURSED) {
			if (subtype == -1)
				return true;
			if (GetItemPropertySubType(p) == subtype)
				return true;
		}
		p = GetNextItemProperty(item);
	}

	return false;
}

void remove_curse(object item, int subtype = -1) {
	itemproperty p = GetFirstItemProperty(item);
	while (GetIsItemPropertyValid(p)) {
		if (GetItemPropertyType(p) == ITEM_PROPERTY_CURSED) {
			if (subtype == -1) {
				RemoveItemProperty(item, p);
			} else if (GetItemPropertySubType(p) == subtype) {
				RemoveItemProperty(item, p);
			}
		}
		p = GetNextItemProperty(item);
	}
}

void main() {
	struct EventInfo e = GetEventInfo();

	/* if (e.ev == "item_unequip" && is_valid(e.runnable) &&
			is_cursed(e.runnable, IP_CONST_CURSED_UNDROPPABLE)) {
		
		SendMessageToAllDMs("unequip: " + GetName(e.runnable) + " by " + GetName(e.actor));

		int slot = GetBestEquippableSlot(e.actor, e.runnable);
		if (-1 == slot) {
			_WARN("player " + GetName(e.actor) + " unequipped a cursed item, but we cant find a slot to re-equip. oops.");
			return;
		}
		FloatingTextStringOnCreature("So sehr du auch versuchst, diesen Gegenstand abzulegen, es gelingt dir nicht.", e.actor, FALSE);
		AssignCommand(e.actor, ActionEquipItem(e.runnable, slot));

		event_ret(EVENT_RESULT_STOP | EVENT_RESULT_END);
	} */

	if (e.ev == "item_spellcast" && is_valid(e.actedon) &&
			is_cursed(e.actedon, IP_CONST_CURSED_UNDROPPABLE)) {
		
		if (GetSpellId() != SPELL_REMOVE_CURSE)
			return;

		SetDroppableFlag(e.actedon, false);
		remove_curse(e.actedon, IP_CONST_CURSED_UNDROPPABLE);
		
		event_stop_end();
	}
}
