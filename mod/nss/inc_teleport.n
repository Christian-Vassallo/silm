
// Show the transporter effect at the given location (with oActivator as the to-be-teleported object).
// This does not show effects at the actual teleport target - you will want to use it twice.
void TeleportEffect(object oActivator, location oLocation);

// Show the dimension door effect visuals.
// Do not use this for cross-area-travel, use TeleportEffect
void DimensionDoorEffect(object oActivator, location lSource, location lTarget);

// Teleports OBJECT_SELF to the given location.
void SpellTeleport(location lTarget, bool bVisualsOnly = false);

// Dimension doors OBJECT_SELF to the given location.
void SpellDimensionDoor(location lTarget, bool bVisualsOnly = false);

// Dimension doors (or teleports, if cross-area) OBJECT_SELF to the given location.
void SpellDimensionDoorOrTeleport(location lTarget, bool bVisualsOnly = false);


void SpellDimensionDoor(location lTarget, bool bVisualsOnly = false) {
	if (!bVisualsOnly)
		ActionDoCommand(SetFacingPoint(GetPositionFromLocation(lTarget)));

	ActionDoCommand(DelayCommand(0.4, DimensionDoorEffect(OBJECT_SELF, GetLocation(OBJECT_SELF), lTarget)));

	if (!bVisualsOnly)
		ActionDoCommand(DelayCommand(0.6, ActionJumpToLocation(lTarget)));
}


void SpellTeleport(location lTarget, bool bVisualsOnly = false) {
	object teleport = OBJECT_SELF;
	float skew = GetArea(OBJECT_SELF) == GetAreaFromLocation(lTarget) ? 0.0 : 3.0;

	AssignCommand(teleport, TeleportEffect(teleport, GetLocation(teleport)));
	AssignCommand(teleport, DelayCommand(skew, TeleportEffect(teleport, lTarget)));

	if (!bVisualsOnly)
		ActionDoCommand(DelayCommand(1.1, ActionJumpToLocation(lTarget)));
}

void SpellDimensionDoorOrTeleport(location lTarget, bool bVisualsOnly = false) {
	if (GetAreaFromLocation(lTarget) == GetArea(OBJECT_SELF))
		SpellDimensionDoor(lTarget, bVisualsOnly);
	else
		SpellTeleport(lTarget, bVisualsOnly);
}


void DimensionDoorEffect(object oActivator, location lSource, location lTarget) {
	ApplyEffectToObject(DURATION_TYPE_TEMPORARY, EffectVisualEffect(747), oActivator, 0.5); // wiggles

	int i;
	for (i = 76; i < 81; i++) {
		ApplyEffectAtLocation(DURATION_TYPE_INSTANT, EffectVisualEffect(i), lSource); // tele in
		ApplyEffectAtLocation(DURATION_TYPE_INSTANT, EffectVisualEffect(i), lTarget); // tele out
	}
}

void TeleportEffect(object oActivator, location oLocation) {
	vector v = GetPositionFromLocation(oLocation);

	vector
	vFeet = v, vBody = v, vHead = v;
	vBody.z = vBody.z + 0.9;
	vHead.z = vBody.z + 0.9;

	location
		lFeet = Location(GetAreaFromLocation(oLocation), vFeet, 0.0),
		lBody = Location(GetAreaFromLocation(oLocation), vBody, 0.0),
		lHead = Location(GetAreaFromLocation(oLocation), vHead, 0.0);

	DelayCommand(0.0, ApplyEffectAtLocation(DURATION_TYPE_INSTANT, EffectVisualEffect(
				VFX_IMP_SPELL_MANTLE_USE), oLocation));

	// feet
	DelayCommand(0.0, ApplyEffectAtLocation(DURATION_TYPE_INSTANT, EffectVisualEffect(VFX_IMP_HEALING_G),
			lFeet));
	DelayCommand(0.2, ApplyEffectAtLocation(DURATION_TYPE_INSTANT, EffectVisualEffect(VFX_IMP_HEALING_G),
			lFeet));
	DelayCommand(0.4, ApplyEffectAtLocation(DURATION_TYPE_INSTANT, EffectVisualEffect(VFX_IMP_HEALING_G),
			lFeet));

	// body
	DelayCommand(0.2, ApplyEffectAtLocation(DURATION_TYPE_INSTANT, EffectVisualEffect(VFX_IMP_HEALING_G),
			lBody));
	DelayCommand(0.4, ApplyEffectAtLocation(DURATION_TYPE_INSTANT, EffectVisualEffect(VFX_IMP_HEALING_G),
			lBody));
	DelayCommand(0.6, ApplyEffectAtLocation(DURATION_TYPE_INSTANT, EffectVisualEffect(VFX_IMP_HEALING_G),
			lBody));

	// head
	DelayCommand(0.4, ApplyEffectAtLocation(DURATION_TYPE_INSTANT, EffectVisualEffect(VFX_IMP_HEALING_G),
			lHead));
	DelayCommand(0.6, ApplyEffectAtLocation(DURATION_TYPE_INSTANT, EffectVisualEffect(VFX_IMP_HEALING_G),
			lHead));
	DelayCommand(0.8, ApplyEffectAtLocation(DURATION_TYPE_INSTANT, EffectVisualEffect(VFX_IMP_HEALING_G),
			lHead));


	// nifty rings with cool whoop sound.
	DelayCommand(0.0, ApplyEffectAtLocation(DURATION_TYPE_INSTANT, EffectVisualEffect(VFX_IMP_DEATH_WARD),
			oLocation));
	DelayCommand(0.5, ApplyEffectAtLocation(DURATION_TYPE_INSTANT, EffectVisualEffect(VFX_IMP_DEATH_WARD),
			oLocation));
	DelayCommand(1.0, ApplyEffectAtLocation(DURATION_TYPE_INSTANT, EffectVisualEffect(VFX_IMP_DEATH_WARD),
			oLocation));
	DelayCommand(1.2, ApplyEffectAtLocation(DURATION_TYPE_INSTANT, EffectVisualEffect(VFX_IMP_DEATH_WARD),
			oLocation));

	DelayCommand(0.0, ApplyEffectAtLocation(DURATION_TYPE_INSTANT, EffectVisualEffect(VFX_IMP_DEATH_WARD),
			lHead));
	DelayCommand(0.5, ApplyEffectAtLocation(DURATION_TYPE_INSTANT, EffectVisualEffect(VFX_IMP_DEATH_WARD),
			lHead));
	DelayCommand(1.0, ApplyEffectAtLocation(DURATION_TYPE_INSTANT, EffectVisualEffect(VFX_IMP_DEATH_WARD),
			lHead));
	DelayCommand(1.2, ApplyEffectAtLocation(DURATION_TYPE_INSTANT, EffectVisualEffect(VFX_IMP_DEATH_WARD),
			lHead));

}
