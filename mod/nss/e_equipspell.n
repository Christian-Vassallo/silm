extern("inc_nwnx_structs")
extern("_gen")

// X damage per N seconds:
#define LIFEDRAIN_DAMAGE 1
#define LIFEDRAIN_OFFSET 120

void RemoveLifeDrain(object creature) {
	int found = false;
	int n; for (n = 0; n < 14; n++) {
		object oIterate = GetItemInSlot(n, creature);
		if (GetLocalString(oIterate, "equipspell") == "lifedrain") {
			found = true;
			break;
		}
	}
	if (!found)
		SetLocalInt(creature, "equipspell_lifedrain", 0);
}

void main() {

	struct EventInfo e = GetEventInfo();

	if (e.ev == "item_equip") {
		effect app;
		string es = GetLocalString(e.runnable, "equipspell");
		if ("" == es)
			return;
		else if ("invisibility" == es)
			app = EffectInvisibility(INVISIBILITY_TYPE_NORMAL);
		else if ("petrify" == es)
			app = SupernaturalEffect(EffectPetrify());
		else if ("blindness" == es)
			app = SupernaturalEffect(EffectBlindness());
		else if ("confused" == es)
			app = SupernaturalEffect(EffectConfused());
		else if ("dazed" == es)
			app = SupernaturalEffect(EffectDazed());
		else if ("darkness" == es)
			app = SupernaturalEffect(EffectAreaOfEffect(AOE_PER_DARKNESS));
		else if ("silence" == es)
			app = SupernaturalEffect(EffectSilence());
		else if ("sleep" == es)
			app = SupernaturalEffect(EffectSleep());
		else if ("lifedrain" == es) {
			SetLocalInt(e.actor, "equipspell_lifedrain", 1);
			SetLocalInt(e.actor, "equipspell_lifedrain_offset", GetLocalInt(e.runnable, "equipspell_lifedrain_offset"));
			SetLocalInt(e.actor, "equipspell_lifedrain_damage", GetLocalInt(e.runnable, "equipspell_lifedrain_damage"));
		} else if ("poison" == es) {
			int poison = GetLocalInt(e.runnable, "poison");
			if (!poison) {
				_WARN("poison equipspell by " + GetName(e.actor) +
					" did not have a poison set, defaulting to HUGE_SPIDER_VENOM");
				poison = POISON_HUGE_SPIDER_VENOM;
			} else
				poison--;
			app = SupernaturalEffect(EffectPoison(poison));
		} else if ("swarm" == es) {
			string ref = GetLocalString(e.runnable, "swarm_ref"); // substr(es, 6, 1024);
			app = EffectSwarm(true, ref);
		} else if ("spellfailure" == es)
			app = SupernaturalEffect(EffectSpellFailure(100));
		else if ("" != es) {
			_WARN("Unknown equipspell '" + es + "'");
			return;
		}
		
		ApplyEffectToObject(DURATION_TYPE_PERMANENT, app, e.actor);
	}

	if (e.ev == "item_unequip") {
		if (GetLocalInt(e.actor, "equipspell_lifedrain"))
			DelayCommand(0.1, RemoveLifeDrain(e.actor));

		if (!is_valid(e.runnable))
			return;

		string es = GetLocalString(e.runnable, "equipspell");
		if (es == "")
			return;

		effect ef = GetFirstEffect(e.actor);
		while (GetIsEffectValid(ef)) {
			if (GetEffectCreator(ef) == e.runnable &&
				GetEffectSubType(ef) == SUBTYPE_MAGICAL) {
				RemoveEffect(e.actor, ef);
			}
			ef = GetNextEffect(e.actor);
		}
	}

	if (e.ev == "module_hb") {
		object pc = GetFirstPC();
		int ld;
		while (is_pc(pc)) {
			if (ld = GetLocalInt(pc, "equipspell_lifedrain")) {
				int now = GetUnixTimestamp();
				int offset = GetLocalInt(pc, "equipspell_lifedrain_offset");
				if (!offset) offset = LIFEDRAIN_OFFSET;
				int damage = GetLocalInt(pc, "equipspell_lifedrain_damage");
				if (!damage) damage = LIFEDRAIN_DAMAGE;

				if (ld + offset <= now) {
					effect dam = EffectDamage(damage, DAMAGE_TYPE_MAGICAL, DAMAGE_POWER_ENERGY);
					SetLocalInt(pc, "equipspell_lifedrain", now);
					ApplyEffectToObject(DURATION_TYPE_INSTANT, dam, pc);
				}
			}
			pc = GetNextPC();
		}
	}
}
