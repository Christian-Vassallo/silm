const int
MSG_TALK = 1,
MSG_SHOUT = 2,
MSG_WHISPER = 3,
MSG_PRIVATE = 4,
MSG_SERVER = 5,
MSG_PARTY = 6,
MSG_SILENT_SHOUT = 13,
MSG_DM = 14,
MSG_MODE_DM = 16;

const int
MSG_TARGET_GLOBAL = -1,
MSG_TARGET_PRIVATE = 0;


const int
CHATMODE_TALK = 1 << 0,
CHATMODE_SHOUT = 1 << 1,
CHATMODE_WHISPER = 1 << 2,
CHATMODE_PRIVATE = 1 << 3,
CHATMODE_PARTY = 1 << 4,
CHATMODE_DM = 1 << 5,
CHATMODE_SERVER = 1 << 6,
CHATMODE_SILENT_SHOUT = 1 << 7,

CHATMODE_DM_MODE = 1 << 8,

CHATMODE_FORCED = 1 << 9,

CHATMODE_TELEPATHIC_BOND = 1 << 10;

const string
LIST_ITEM_NAME = "chatPC_",
PC_ID_NAME = "chatID";

// Function: SpeakToChannel
// Makes oSender speak to oRecipient on nChannel = MSG_*.
void NWNXChatSpeakToChannel(object oSender, int nChannel, string sMessage,
							object oRecipient = OBJECT_INVALID);

// Function: GetPC
// Returns the PC with the given player ID, or OBJECT_INVALID if invalid ..
object NWNXChatGetPC(int nID);

// Function: Suppress
// Suppress the last chat message. ONLY usable
// in the chat script.
void NWNXChatSuppress(object oPC = OBJECT_SELF);

// Function: ChatModeToMsg
// Converts CHATMODE_* to MSG_*
int ChatModeToMsg(int mode);

// Function: MsgToChatMode
// Converts MSG_* to CHATMODE_*
int MsgToChatMode(int msg);

int ChatModeToMsg(int mode)
{
	int msg = 0;

	if (mode & CHATMODE_TALK) msg = MSG_TALK;

	if (mode & CHATMODE_SHOUT) msg = MSG_SHOUT;

	if (mode & CHATMODE_WHISPER) msg = MSG_WHISPER;

	if (mode & CHATMODE_PRIVATE) msg = MSG_PRIVATE;

	if (mode & CHATMODE_SERVER) msg = MSG_SERVER;

	if (mode & CHATMODE_PARTY) msg = MSG_PARTY;

	if (mode & CHATMODE_SILENT_SHOUT) msg = MSG_SILENT_SHOUT;

	if (mode & CHATMODE_DM) msg = MSG_DM;

	if (mode & CHATMODE_DM_MODE)
		msg += MSG_MODE_DM;

	return msg;
}

int MsgToChatMode(int msg)
{
	int mode = 0;

	if (msg > MSG_MODE_DM) {
		msg -= MSG_MODE_DM;
		mode |= CHATMODE_DM_MODE;
	}

	switch (msg) {
	case MSG_TALK:
		mode |= CHATMODE_TALK;
		break;

	case MSG_SHOUT:
		mode |= CHATMODE_SHOUT;
		break;

	case MSG_WHISPER:
		mode |= CHATMODE_WHISPER;
		break;

	case MSG_PRIVATE:
		mode |= CHATMODE_PRIVATE;
		break;

	case MSG_SERVER:
		mode |= CHATMODE_SERVER;
		break;

	case MSG_PARTY:
		mode |= CHATMODE_PARTY;
		break;

	case MSG_SILENT_SHOUT:
		mode |= CHATMODE_SILENT_SHOUT;
		break;

	case MSG_DM:
		mode |= CHATMODE_DM;
		break;

	default:
		_ERROR("Unknown mode " + itoa(msg));
		break;
	}

	return mode;
}


void NWNXChatSpeakToChannel(object oSender, int nChannel, string sMessage,
							object oRecipient = OBJECT_INVALID)
{
	if (!GetIsObjectValid(oSender))
		return;

	if (FindSubString(sMessage, "¬") != -1)
		return;

	if (nChannel == MSG_PRIVATE && !GetIsObjectValid(oRecipient))
		return;

	SetLocalString(oSender, "NWNX!CHAT!SPEAK", ObjectToString(oSender) +
				   "¬" + ObjectToString(oRecipient) + "¬" + IntToString(nChannel) + "¬" + sMessage);
}


void NWNXChatInit()
{
	int i;
	object oMod = GetModule();
	// memory for chat text
	string sMemory;

	for (i = 0; i < 8; i++)    // reserve 8*128 bytes
		sMemory +=
			"................................................................................................................................";

	SetLocalString(oMod, "NWNX!INIT", "1");
	SetLocalString(oMod, "NWNX!CHAT!SPACER", sMemory);
}

string NWNXChatGetSpacer()
{
	return GetLocalString(GetModule(), "NWNX!CHAT!SPACER");
}

void NWNXChatPCin(object oPC)
{
	if (!GetIsObjectValid(oPC))
		return;

	object oMod = GetModule();
	SetLocalString(oPC, "NWNX!CHAT!GETID", ObjectToString(oPC) + "        ");
	string sID = GetLocalString(oPC, "NWNX!CHAT!GETID");
	int nID = StringToInt(sID);

	if (nID != -1) {
		SetLocalObject(oMod, LIST_ITEM_NAME + sID, oPC);
		SetLocalInt(oPC, PC_ID_NAME, nID);
	}

	DeleteLocalString(oPC, "NWNX!CHAT!GETID");
}

void NWNXChatPCout(object oPC)
{
	if (!GetIsObjectValid(oPC))
		return;

	int nID = GetLocalInt(oPC, PC_ID_NAME);
	DeleteLocalInt(oPC, PC_ID_NAME);
	DeleteLocalObject(GetModule(), LIST_ITEM_NAME + IntToString(nID));
}


// helpers

object NWNXChatGetPC(int nID)
{
	return GetLocalObject(GetModule(), LIST_ITEM_NAME + IntToString(nID));
}

void NWNXChatSuppress(object oPC = OBJECT_SELF)
{
	SetLocalString(oPC, "NWNX!CHAT!SUPRESS", "1");
}

int NWNXChatGetCCMessageType()
{
	SetLocalString(GetModule(), "NWNX!CHAT!TYPE", "  ");
	return StringToInt(GetLocalString(GetModule(), "NWNX!CHAT!TYPE"));
}

int NWNXChatGetCCMessagSubtype()
{
	SetLocalString(GetModule(), "NWNX!CHAT!SUBTYPE", "  ");
	return StringToInt(GetLocalString(GetModule(), "NWNX!CHAT!SUBTYPE"));
}
