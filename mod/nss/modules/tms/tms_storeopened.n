extern("inc_currency")

int MAX_ITEM_COUNT = 1;
int MAX_TOTAL_COUNT = 100;

void TagStoreInventory()
{
	object oItem = GetFirstItemInInventory();

	while (GetIsObjectValid(oItem)) {
		SetLocalInt(oItem, "TMS_STORE_GENUINE", 1);
		oItem = GetNextItemInInventory();
	}
}

void PruneStoreInventory()
{
	int iItemCount;
	int iTotalCount;
	object oItm;
	string sTag;

	oItm = GetFirstItemInInventory();

	while (GetIsObjectValid(oItm)) {
		if (!GetLocalInt(oItm, "TMS_STORE_GENUINE")) {
			sTag = GetTag(oItm);
			iItemCount = GetLocalInt(OBJECT_SELF, "count_" + sTag);

			if (iItemCount > MAX_ITEM_COUNT || iTotalCount > MAX_TOTAL_COUNT)
				DestroyObject(oItm);

			else {
				SetLocalInt(OBJECT_SELF, "count_" + sTag, iItemCount + 1);
				iTotalCount++;
			}
		}

		oItm = GetNextItemInInventory();
	}

	oItm = GetFirstItemInInventory();

	while (GetIsObjectValid(oItm)) {
		DeleteLocalInt(OBJECT_SELF, "count_" + GetTag(oItm));
		oItm = GetNextItemInInventory();
	}
}

void main()
{
	object oPC = GetLastOpenedBy();

	/* Convert the money into the gold piece value */
	GiveGoldToCreature(oPC, CountInventoryMoney(oPC, TRUE));

	if (!GetLocalInt(OBJECT_SELF, "Store_Initialized")) {
		TagStoreInventory();
		SetLocalInt(OBJECT_SELF, "Store_Initialized", 1);

	} else
		PruneStoreInventory();
}
