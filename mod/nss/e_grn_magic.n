extern("inc_nwnx_events")
extern("inc_spells")
extern("inc_misc")

void main() {
	struct EventInfo e = GetEventInfo();

	if (e.ev == "creature_castspell") {
		if (!is_valid(e.actedon))
			return;

		if (GetTag(e.actedon) != "mag_gren")
			return;

		if (GetLocalInt(e.actedon, "mag_grenade_do_visuals")) {
			SetLocalInt(e.actedon, "mag_grenade_do_visuals", false);
			return;
		}

		if (GetLocalInt(e.actedon, "mag_grenade_has_spell")) {
			// grenade already has a spell on it - what do we want to do?
			// For now, just recharge with the new one
		}

		int spell_id     = NWNXGetEventSubType()       & 0xffff;
		int spell_mask  = HexToInt(substr(Get2DAString("spells", "TargetType", spell_id), 2, 16));

		// These are the things we can throw this spell at.
		if (spell_mask & 0x02 || spell_mask & 0x04 || spell_mask & 0x10 || spell_mask & 0x20) {
			// Spell can be used for a mag_gren

		} else {
			FloatingTextStringOnCreature("*Dieser Zauber ist nicht fuer die magische Granate geeignet.", e.actor, false);
			event_stop_suppress();
		}

		int meta         = NWNXGetEventSubType() >> 16 & 0xff;
		int class_index  = NWNXGetEventSubType() >> 24 & 0x07;
		int flags        = NWNXGetEventSubType() >> 27 & 0x0f; // instant_cast
		int caster_level = GetLevelByClass(class_index, e.actor);

		string spell_name = GetSpellName(spell_id);
		
		SetLocalInt(e.actedon, "mag_grenade_has_spell", 1);
		SetLocalInt(e.actedon, "mag_grenade_spell_id", spell_id);
		SetLocalInt(e.actedon, "mag_grenade_metamagic", meta);
		SetLocalInt(e.actedon, "mag_grenade_caster_level", caster_level);

		DelayCommand(1.5, FloatingTextStringOnCreature("*Granate geladen: " + spell_name + "*", e.actor, false));
		SetName(e.actedon, "Magische Granate: " + spell_name);

		SetLocalInt(e.actedon, "mag_grenade_do_visuals", true);
		AssignCommand(e.actor, ActionCastFakeSpellAtObject(spell_id, e.actedon));
		event_stop_suppress();
	}
}

