extern("inc_dbplac")
extern("inc_target")
extern("inc_colors")
/**
Syntax:
/mark <t> - add a marker at the current location
/markdel  - delete selected mark
*/

#define plref "p_mark"

void main()
{
	struct EventInfo e = GetEventInfo();

	if (e.ev != "chat_command") return;

	struct EventArguments ea = GetEventArguments(e.serial);

	if (ea.a0 == "mark") {
		string a = ea.a1;

		if (a == "") {
			SendMessageToPC(e.runnable, "Missing text.");
			event_stop();
		}

		a = C(a, cLightGrey) + C(" (" + GetName(e.runnable) + ")", cDarkGrey);

		object pl = CreateObject(OBJECT_TYPE_PLACEABLE, plref, GetLocation(e.runnable));
		int plid = SavePlacie(pl, e.runnable);

		if (!plid) {
			SendMessageToPC(e.runnable, "Cannot save placeable, sorry!");

		} else {
			pQ("insert into scene_descriptions (pid, text, comment) values(" +
			   pSi(GetPlaceableID(pl)) + ", " + pSs(a) + ", 'mark');");
			SendMessageToPC(e.runnable, "Done.");
		}

		event_stop();
	}

	if (ea.a0 == "markdel") {
		object t = GetTarget(TARGET_DEFAULT_SLOT, e.runnable);

		if (GetResRef(t) != plref || GetPlaceableID(t) < 1) {
			SendMessageToPC(e.runnable, "No valid scene description targeted.");

		} else {
			pQ("delete from scene_descriptions where pid = " + pSi(GetPlaceableID(t)));
			KillPlacie(t, 0.0, true);
		}

		event_stop();
	};

}
