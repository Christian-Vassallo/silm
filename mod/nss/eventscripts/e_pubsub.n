extern("inc_cdb")
extern("inc_session")
extern("inc_chat")
extern("inc_perception")

/* NAMESPACES

// raw events
raw.*

server.*
	things related to server management, state, technical things

player.*
	things related to player or dm characters
player.session.start, end
	session open and close

player.afk

*/

string location_to_string(location lo)
{
	object oArea = GetAreaFromLocation(lo);
	vector v = GetPositionFromLocation(lo);
	float f = GetFacingFromLocation(lo);

	if (!GetIsObjectValid(oArea))
		return "";

	return "(" + GetResRef(oArea) +
		   "):(" + FloatToString(v.x, 0, 2) + "," + FloatToString(v.y, 0, 2) + "," + FloatToString(v.z, 0, 2) +
		   "):(" + FloatToString(f, 0, 2) + ")";
}

string heard_by_session(object oPC, int nMode)
{
	string ret;
	iterate_players(oIterate,
		if (oPC != oIterate && reads(nMode, oPC, oIterate))
			ret += itoa(session_get(oIterate)) + ",";
	);

	if (strlen(ret) > 0)
		ret = substr(ret, 0, strlen(ret) - 1);

	return ret;
}

void main()
{
	struct EventInfo e = GetEventInfo();
	struct EventArguments ea = GetEventArguments(e.serial);

	PUBLISH("raw." + e.ev,
			ObjectToString(e.runnable) + " " +
			ObjectToString(e.actor) + " " +
			ObjectToString(e.actedon)
		   );

	// player.session.*
	if (e.ev == "session_start") {
		PUBLISH("player.session.start", IntToString(ea.i0));
		return;
	}

	if (e.ev == "session_end") {
		PUBLISH("player.session.end", IntToString(ea.i0));
		return;
	}

	if (e.ev == "session_cleanup") {
		PUBLISH("player.session.cleaanup", "1");
		PUBLISH("server.start", "1");
		return;
	}

	// server.*
	if (e.ev == "module_hb") {
		PUBLISH("server.hb", "OK");
		return;
	}

	if (e.ev == "player_hb") {
		// Periodically publish player locations
		PUBLISH("player.location",
				itoa(session_get(e.runnable)) + " " +
				location_to_string(GetLocation(e.runnable)));
		return;
	};

	if (e.ev == "player_afk") {
		PUBLISH("player.afk",
				itoa(session_get(e.runnable)) + " " +
				itoa(ea.i0));
		return;
	}

	// player.chat.*
	if (e.ev == "chat_prefilter") {
		// Don't show commands, quickchat, TB and location jumps
		if (substr(ea.a0, 0, 1) == "/" || substr(ea.a0, 0, 1) == "$" ||
				substr(ea.a0, 0, 1) == "." || substr(ea.a0, 0, 1) == ",")
			return;

		int logmode = ea.i0;

		if (logmode & CHATMODE_DM_MODE)
			logmode -= CHATMODE_DM_MODE;

		// from-session to-session heard,by,sessions text
		string heard_by = heard_by_session(e.actor, logmode);

		if (heard_by == "")
			heard_by = "0";

		PUBLISH("player.chat." + IntToString(logmode),
				IntToString(session_get(e.actor)) + " " +
				IntToString(session_get(e.actedon)) + " " +
				heard_by + " " +
				ea.a0);
		return;
	}
}
