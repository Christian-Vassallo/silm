extern("inc_nwnx_def")
extern("inc_colors")
extern("inc_cdb")

void main()
{
	struct EventInfo e = GetEventInfo();
	// struct EventArguments ea = GetEventArguments(e.serial);

	if (e.ev == "pc_examine" && is_creature(e.actedon) &&
			amask(e.runnable, AMASK_GLOBAL_GM)) {

		string ret = ColorTag(cLightBlue) + GetName(e.actedon) +
					 " AC: ";

#define X(n,t) if (GetACByType(e.actedon, t) != 0) \
	ret += ColorTag(cLightGrey) + n + "=" + ColorTag(cMidGreen) + \
	itoa(GetACByType(e.actedon, t)) + " ";

		X("str", AC_STRENGTH_BONUS)
		X("dex", AC_DEXTERITY_BONUS);
		X("con", AC_CONSTITUTION_BONUS);
		X("int", AC_INTELLIGENCE_BONUS);
		X("cha", AC_CHARISMA_BONUS);
		X("wis", AC_WISDOM_BONUS);
		X("equip", AC_EQUIP_BONUS);
		X("skill", AC_SKILL_BONUS);
		X("class", AC_CLASS_BONUS);
		X("feat", AC_FEAT_BONUS);
		X("other", AC_OTHER_BONUS);
		X("touch", AC_TOUCH_BASE);
		X("shield", AC_SHIELD_BASE);
		X("armor", AC_ARMOUR_BASE);
		X("nat", AC_NATURAL_BASE);
		X("dodge_bonus", AC_DODGE_BONUS);
		X("nat_bonus", AC_NATURAL_BONUS);
		X("armor_ench", AC_ARMOUR_ENCHANTMENT_BONUS);
		X("shield_ench", AC_SHIELD_ENCHANTMENT_BONUS);
		X("deflect", AC_DEFLECTION_BONUS);

		ret += ColorTag(cOrange) + "=>" + itoa(GetAC(e.actedon));

		SendMessageToPC(e.runnable, ret);
	}
}
