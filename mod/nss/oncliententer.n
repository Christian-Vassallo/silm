extern("inc_cdb")
extern("inc_chat")
extern("_gen")
extern("inc_mnx")
extern("inc_audit")
extern("inc_currency")
extern("inc_events")
#include "inc_pgsql.nh"

void MnxNotify(object oPC);

void main() {
	object oPC = GetEnteringObject();

	NWNXChatPCin(oPC);

	int nGold = Money2Value(CountInventoryMoney(oPC, 0));

	audit("login", oPC, audit_fields("key", GetPCPublicCDKey(oPC), "xp", IntToString(GetXP(oPC)), "gold",
			IntToString(nGold)));

	SetLocalString(oPC, "player_name", GetPCPlayerName(oPC));

	SendMessageToPC(oPC, "Commit: " + GIT_COMMIT);
	SendMessageToPC(oPC, "Commited on: " + GIT_COMMIT_ON);
	SendMessageToPC(oPC, "Built on: " + GIT_BUILD_ON);


	DelayCommand(1.0f, ExecuteScript("_mod_clenter_cdb", oPC));


	//Must come first!!!
	ExecuteScript("login_1stenter", oPC);
	ExecuteScript("login_subrace", oPC);
	ExecuteScript("login_pcdata", oPC);
	ExecuteScript("login_misc", oPC);
	ExecuteScript("login_update", oPC);
	ExecuteScript("login_corpse", oPC);
	ExecuteScript("login_effects", oPC);


	DelayCommand(1.0f, MnxNotify(oPC));


	// XXX hotfix
	SetLocalInt(oPC, "bandage", 0);
	SetLocalInt(oPC, "medicine", 0);

	SetLocalInt(oPC, "message_count", 0);

	RunEventScriptsFor(EVENT_TYPE_PC, EVENT_PC_LOGIN, oPC, oPC, OBJECT_INVALID, GetLocation(OBJECT_INVALID), EVENT_MODE_DEFER);

}

void MnxNotify(object oPC) {
	string sCharName = GetName(oPC);
	string sAccountName = GetPCName(oPC);
	int nAID = GetAccountID(oPC);
	int nCID = GetCharacterID(oPC);
	string bIsDM = BoolToString(GetIsDM(oPC));

	mnx_asynchronous_command(mnx_prepare_command("cliententer", sAccountName, sCharName, IntToString(nAID), IntToString(nCID),
							bIsDM, GetPCIPAddress(oPC), GetPCPublicCDKey(oPC)));
	string host = GetPCIPAddress(oPC);
	pQ("select dns.getname(" + pSs(host) + ");");
	if (pF())
		host = pGs(1);

	string
		sIP = GetPCIPAddress(oPC),
		sKey = GetPCPublicCDKey(oPC);

	SendMessageToAllDMs("enter: '" +
		sAccountName +
		"'(" +
		IntToString(nAID) +
		") '" + sCharName + "'(" + IntToString(nCID) + "), " + sIP + " -> " + host + "/" + sKey);
}

