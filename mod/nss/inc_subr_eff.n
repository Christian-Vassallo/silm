extern("inc_effects")
extern("inc_nwnx")

/* commented out
 * void ApplyNWNXWings(object oPC, int iType)
 * {
 * //Convert wing types into appropriate model numbers
 * if(iType < 0) iType = 1;
 * else if(iType > 0) iType = 15;
 * else iType = 6;
 *
 * //Already set, save yourselves the hassle
 * if(GetBodyPart(oPC,NWNX_BODYPART_WING) == iType)
 * 	return;
 *
 * SafeSetBodyPart(oPC,NWNX_BODYPART_WING,iType);
 * } */

struct EffDesc {
	int _pad;
	string sType;
	int iPar1;
	int iPar2;
	int iPar3;
	int iLev1;
	int iLev2;
	int iLev3;
	int iVers;
};

struct EffDesc SR_GetEffectStruct(string sSubrace, int iIndex, int iLevel)
{
	struct EffDesc New;
	string sSuff = "SR_Eff_" + sSubrace + "_" + IntToString(iIndex);
	object oMod = GetModule();

	New.sType = GetLocalString(oMod, sSuff + "_Type");
	New.iPar1 = GetLocalInt(oMod, sSuff + "_Par1");
	New.iPar2 = GetLocalInt(oMod, sSuff + "_Par2");
	New.iPar3 = GetLocalInt(oMod, sSuff + "_Par3");
	New.iLev1 = GetLocalInt(oMod, sSuff + "_Lev1");
	New.iLev2 = GetLocalInt(oMod, sSuff + "_Lev2");
	New.iLev3 = GetLocalInt(oMod, sSuff + "_Lev3");
	New.iVers = GetLocalInt(oMod, sSuff + "_Vers");

	if (New.iLev1) New.iPar1 += iLevel / New.iLev1;

	if (New.iLev2) New.iPar2 += iLevel / New.iLev2;

	if (New.iLev3) New.iPar3 += iLevel / New.iLev3;

	return New;
}


effect SR_ParseEffectStruct(struct EffDesc New)
{
	effect eNew;

	eNew = ParseEffect(New.sType, New.iPar1, New.iPar2, New.iPar3);

	if (New.iVers >= 0) eNew = VersusRacialTypeEffect(eNew, New.iVers);

	return SupernaturalEffect(eNew);
}

void ApplySubraceEffects(object oPC)
{
	struct EffDesc New;
	string sSubrace = GetLocalString(oPC, "SR_Subrace");
	int iNumEffs = GetLocalInt(GetModule(), "SR_NEffects_" + sSubrace);
	int iLevel = GetHitDice(oPC);
	effect eNew;
	int i;

	for (i = 0; i < iNumEffs; i++) {
		New = SR_GetEffectStruct(sSubrace, i, iLevel);

		if (New.sType == "wing") {   // && NWNX_Initialized()) {
			// ApplyNWNXWings(oPC, New.iPar1);
			//SetCreatureWingType(New.iPar1, oPC);
			// moved to operator code!
		} else {
			eNew = SR_ParseEffectStruct(New);
			ApplyEffectToObject(DURATION_TYPE_PERMANENT, eNew, oPC);
		}
	}
}

/*
 * We treat all supernatural effects apart from ability decrease or negative
 * level or polymorph as our own
 */

int IsSubraceEffect(effect eEff)
{
	int iType;

	if (GetEffectSubType(eEff) != SUBTYPE_SUPERNATURAL) return 0;

	if ((iType = GetEffectType(eEff)) == EFFECT_TYPE_ABILITY_DECREASE) return 0;

	if (iType == EFFECT_TYPE_NEGATIVELEVEL) return 0;

	if ((iType = GetEffectType(eEff)) == EFFECT_TYPE_POLYMORPH) return 0;

	return 1;
}

void RemoveSubraceEffects(object oPC)
{
	effect eEff = GetFirstEffect(oPC);

	while (GetIsEffectValid(eEff)) {
		if (IsSubraceEffect(eEff)) RemoveEffect(oPC, eEff);

		eEff = GetNextEffect(oPC);
	}
}

void SR_RemoveEffect(object oPC, effect eEff)
{
	if (!IsSubraceEffect(eEff)) RemoveEffect(oPC, eEff);
}

void RefreshSubraceEffects(object oPC)
{
	RemoveSubraceEffects(oPC);
	ApplySubraceEffects(oPC);
	DeleteLocalInt(oPC, "SR_In_Area");
	DeleteLocalInt(oPC, "SR_Airborne");
}

