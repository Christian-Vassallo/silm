extern("inc_scorco")
extern("_gen")
extern("inc_identify")

void main()
{
	struct EventInfo e = GetEventInfo();

	if ("pc_examine" != e.ev)
		return;

	if (!GetItemIdentifiesFor(e.actedon, e.actor))
		return;

	itemproperty p;
	int count = 0;

	p = GetFirstItemProperty(e.actedon);

	while (GetIsItemPropertyValid(p)) {
		count += 1;
		p = GetNextItemProperty(e.actedon);
	}

	SendMessageToPC(e.actor, "  ");

	if (!count) {
		SendMessageToPC(e.actor, ColorTag(cWhite) + "Keine Eigenschaften auf " + GetName(e.actedon) + ".");

	} else {
		SendMessageToPC(e.actor, ColorTag(cWhite) + "Eigenschaften auf " + GetName(e.actedon) + ":");
		p = GetFirstItemProperty(e.actedon);

		while (GetIsItemPropertyValid(p)) {
			string str = "";

			struct Color col;

			switch (GetItemPropertyDurationType(p)) {
			case DURATION_TYPE_INSTANT:
			case DURATION_TYPE_PERMANENT:
				col = CS(MI, HI, MI);
				break;

			case DURATION_TYPE_TEMPORARY:
				col = cLightBlue;
				break;
			}

			str += ColorTag(col) + " " + ItemPropertyToString(p);

			SendMessageToPC(e.actor, str);

			p = GetNextItemProperty(e.actedon);
		}

		SendMessageToPC(e.actor, ColorTag(cWhite) + "Ende der Liste.");
	}
}
