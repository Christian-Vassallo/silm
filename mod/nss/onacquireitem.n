__sp_extern("inc_currency")
__sp_extern("nw_i0_plotwizard")
__sp_extern("inc_events")
__sp_extern("inc_scorco")
__sp_extern("inc_setting")


// Returns the nearest herbal bag that still has capacity
object GetHerbalBag(object oPC) {
	return GetItemPossessedBy(oPC, "herbal_bag");
}


void _TransformMoney(object oPC, int iValue) {
	struct Money New;
	TakeGoldFromCreature(iValue, oPC, TRUE);
	New = Value2Money(iValue, TRUE);
	GiveMoneyToCreature(oPC, New);
}

void main() {
	// PLOT WIZARD MANAGED CODE BEGINS
	// PLOT WIZARD MANAGED CODE ENDS

	object oPC = GetModuleItemAcquiredBy();
	object oFrom = GetModuleItemAcquiredFrom();
	object oItem = GetModuleItemAcquired();
	int iStack = GetModuleItemAcquiredStackSize();
	string sResRef = GetResRef(oItem);

	//Got Engine gold coins, transpose into own currency
	if ( !GetIsObjectValid(oItem) ) {
		int iValue = GetGold(oPC);
		AssignCommand(oPC, _TransformMoney(oPC, iValue));
		return;
	}


	// Put into herbal thingummy

	if ( GetStringLeft(sResRef, 4) == "herb" ) {
		object oBag = GetHerbalBag(oPC);
		if ( GetIsObjectValid(oBag) ) {
			AssignCommand(oPC, ActionGiveItem(oItem, oBag));
		}
	}

	if (gvGetInt("persist_dropped_items") && GetIsObjectValid(oItem) && p_id(oItem)) {
		p_delete("dropped_items", oItem);
	}

	// Run the event script, if available.
	RunEventScript(oItem, EVENT_ITEM_ACQUIRE, EVENT_PREFIX_ITEM);
}
