extern("inc_events")
extern("inc_teleport")
extern("inc_lists")
extern("inc_position")
#include "inc_pgsql.nh"

#define CONV_TAG "tptok"
#define LOAD_SKEW 3.0

int MakeDialog(object oPC, object oTeleportWhom, bool allow_swap);

void DlgStart(object oPC, object Who, bool allow_swap);

void DlgStart(object oPC, object Who, bool allow_swap) {
	DeleteLocalInt(oPC, CONV_TAG + "_sel");
	if ( !MakeDialog(oPC, Who, allow_swap) )
		return;
	AssignCommand(oPC, ActionStartConversation(oPC, "list_select", TRUE, TRUE));
}


void main() {
	struct EventInfo e = GetEventInfo();
	struct EventArguments a = GetEventArguments(e.serial);
	object token = e.runnable;

	if (GetLocalInt(token, "tptok") && (GetLocalInt(token, "tptok_quick") && e.ev == "item_freeactivate") || e.ev == "item_activate") {
		SetEventResult(EVENT_RESULT_SUPPRESS);

		float max_distance = GetLocalFloat(token, "tptok_max_distance");
		bool allow_others = GetLocalInt(token, "tptok_allow_others");
		bool allow_teleport = GetLocalInt(token, "tptok_allow_teleport");
		bool allow_swap = GetLocalInt(token, "tptok_allow_swap");
		bool allow_dimdoor = GetLocalInt(token, "tptok_allow_dimdoor");

		bool works = false;
		if (is_creature(e.actedon)) {
			if (allow_teleport && (allow_others && e.actedon != e.actor)) {
				works = true;
				DlgStart(e.actor, e.actedon, allow_swap);
			}
		}

		if (!is_valid(e.actedon)) {
			if (allow_dimdoor && GetAreaFromLocation(e.actedat) == GetArea(e.actor) && (max_distance == 0f || GetDistanceBetweenLocations(e.actedat, GetLocation(e.actor)) <= max_distance)) {
				works = true;
				AssignCommand(e.actor, teleport_effect_and_go(e.actedat, 0.0, true));
			}
		}

		if (!works)
			FloatingTextStringOnCreature("Nichts passiert.", e.actor, false);
	}
}

int MakeDialog(object oPC, object oTeleportWhom, bool allow_swap) {
	ClearList(oPC, CONV_TAG);
	SetLocalObject(oPC, CONV_TAG + "_target", oTeleportWhom);

	int iSel = GetLocalInt(oPC, CONV_TAG + "_sel");

	string sHeader = "Waehle deinen Zielpunkt:";
	
	if (allow_swap && oPC != oTeleportWhom) {
		AddListItem(oPC, CONV_TAG, "Mit " + GetName(oTeleportWhom) + " tauschen");
		SetListInt(oPC, CONV_TAG, -2);
	}

	if (oPC != oTeleportWhom) {
		AddListItem(oPC, CONV_TAG, GetName(oTeleportWhom) + " zu dir holen");
		SetListInt(oPC, CONV_TAG, -1);
	}

	string area, name, lpt;
	float x,y,z,f;
	int id;
	pQ("select l.area,x,y,z,f,l.name,l.id,a.name from locations l,areas a where a.tag = l.area order by a.name asc;");

	while (pF()) {
		area = pGs(1); x = pGf(2); y = pGf(3); z = pGf(4); f = pGf(5); name = pGs(8); id = pGi(7); lpt = pGs(6);

		AddListItem(oPC, CONV_TAG, name + " (" + lpt + ")");
		SetListInt(oPC, CONV_TAG, id);
	}

	ResetConvList(oPC, oPC, CONV_TAG, 50000, "i_tptok_cb2", sHeader);

	return 1;
}



