extern("inc_cdb")
extern("inc_chat")
extern("inc_chat_lib")
extern("inc_chatlog")

#define USE_TELL false
#define DARKEN_OWN 0

// Delegates a message oPC heard to all
// of oPCs telepathic partners that are
// set to receive it.
// oSpeakingObject can be a placeable or item,
// too. (via forcetalk)
int DelegateHeardToPartners(object oPC, object oSpeakingObject, int nMode,
	string sMessage);

// oPC just said sMessage in nMode, so
// delegate it to all partners that are
// set to receive it.
int DelegateOwnToPartners(object oPC, int nMode, string sMessage);

// oPC sent sMessage over the telepathic link,
// so send it over.
// Returns the number of PCs reached
int DelegateTelepathicMessageToPartners(object oPC, string sMessage,
		string addWhere = "1=1");

// Sets bonds active/inactive
void SetBondsActive(object oPC, int bState);

int GetHasActiveBonds(object oPC, string addWhere = "1=1");

int GetHasActiveBonds(object oPC, string addWhere = "1=1") {
	int nCID = GetCharacterID(oPC);
	if (!nCID)
		return false;

	pQ("select id from telepathic_bonds where character = " + pSi(nCID) +
			" and active = true and " + addWhere + ";");
	return pF();
}

int DelegateTelepathicMessageToPartners(object oPC, string sMessage,
		string addWhere = "1=1") {

	int nCID = GetCharacterID(oPC);
	if (!nCID)
		return 0;

	int nCount = 0;

	string sMessageRaw = sMessage;
	int nTCID;
	object oB;
	string sStart =  ColorTag(cTeal);
	string sShortName = GetName(oPC);
	string sRest = ColorTagClose() + " " +
		ColorisePlayerText(oPC, CHATMODE_TALK, sMessage);
	sMessage = sStart + sShortName + sRest;


	pQ("select t_character, shortname from telepathic_bonds where character = " +
		IntToString(nCID) + " and expire <= unixts() and " + addWhere + ";");

	while (pF()) {
		nTCID = StringToInt(pG(1));
		sShortName = pG(2);
		oB = GetPCByCID(nTCID);

		if (GetIsPC(oB)) {
			if (sShortName != "")
				sMessage = sStart + sShortName + sRest;

			if (USE_TELL)
				NWNXChatSpeakToChannel(oPC, MSG_PRIVATE, sMessage, oB);
			else
				SendMessageToPC(oB, sMessage);
			
			if (gvGetInt("telepathbond_delegate_to_dm"))
				SendMessageToAllDMs("[TB] " + GetName(oPC) +
					" > " + GetName(oB) + ": " + sMessage);

			ChatLog(oPC, CHATMODE_TELEPATHIC_BOND, sMessageRaw, oB);

			nCount++;
		}

	}
	if (!USE_TELL && nCount > 0) {
		if (DARKEN_OWN > 0)
			sRest = ColorTagClose() + " " +
				ColorisePlayerTextOverride(oPC, CHATMODE_TALK, sMessageRaw,
					Darken(colorText, DARKEN_OWN),
					Darken(colorEmote, DARKEN_OWN),
					Darken(colorEmphasis, DARKEN_OWN),
					Darken(colorEmphasisInEmote, DARKEN_OWN));

		sMessage = ColorTag(CS(MIN, MI, MI)) + "TB" + sRest;
		SendMessageToPC(oPC, sMessage);
	}
	return nCount;
}


int DelegateOwnToPartners(object oPC, int nMode, string sMessage) {
	int nCID = GetCharacterID(oPC);
	if (!nCID)
		return 0;

	int nCount = 0;

	int nTCID;
	object oB;
	string sStart =  ColorTag(cOrange);
	string sShortName = GetName(oPC);
	string sRest = ColorTagClose() +
		ColorisePlayerText(oPC, nMode, sMessage);
	string sMessage = sStart + sShortName + ": " + sRest;

	pQ("select t_character, shortname from telepathic_bonds where character = " +
		IntToString(nCID) + " and active = true and expire <= unixts() and " +
		"send_spoken = true;");

	while (pF()) {
		nTCID = StringToInt(pG(1));
		sShortName = pG(2);
		oB = GetPCByCID(nTCID);

		if (GetIsPC(oB)
				&& !hears(oPC, oB, nMode & CHATMODE_TALK ?
					TALKVOLUME_TALK : TALKVOLUME_WHISPER)) {

			if (sShortName != "")
				sMessage = sStart + sShortName + ": " + sRest;

			if (USE_TELL)
				NWNXChatSpeakToChannel(oPC, MSG_PRIVATE, sMessage, oB);
			else
				// FloatingTextStringOnCreature(sMessage, oB, false);
				SendMessageToPC(oB, sMessage);
			nCount++;
		}

	}

	return nCount;
}


int DelegateHeardToPartners(object oPC, object oSpeakingObject, int nMode,
		string sMessage) {
	int nCID = GetCharacterID(oPC);
	if (!nCID)
		return 0;

	int nCount = 0;

	int nTCID;
	object oB;
	string sStart =  ColorTag(cLightGrey);
	string sShortName = GetName(oSpeakingObject);
	string sRest = ColorTagClose() +
		ColorisePlayerText(oSpeakingObject, nMode, sMessage);

	string sMessage = sStart + sShortName + ": " + sRest;

	pQ("select t_character, shortname from telepathic_bonds where character = " +
		IntToString(nCID) + " and active = true and expire <= unixts() and " +
		"send_heard = true;");

	while (pF()) {
		nTCID = StringToInt(pG(1));
		oB = GetPCByCID(nTCID);

		if (GetIsPC(oB)
			&& !hears(oB, oSpeakingObject, nMode & CHATMODE_TALK ?
				TALKVOLUME_TALK : TALKVOLUME_WHISPER)) {

			if (USE_TELL)
				NWNXChatSpeakToChannel(oPC, MSG_PRIVATE, sMessage, oB);
			else
				SendMessageToPC(oB, sMessage);
			nCount++;
		}

	}

	return nCount;
}

void SetBondsActive(object oPC, int bState) {
	int nCID = GetCharacterID(oPC);
	if (!nCID)
		return;

	bState = 0 != bState;

	pQ("update telepathic_bonds set active=" +
		IntToString(bState) + " where character = " +
			IntToString(nCID) + " and expire <= unixts();");
}
