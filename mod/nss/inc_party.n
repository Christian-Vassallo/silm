extern("inc_target")
extern("x0_i0_partywide")

// Returns the faction id of the given players' party.
// Returns 0, if the player is not in any party.
int GetPartyFactionId(object pc);

// Returns a member of the given party, or OBJECT_INVALID
// if no party by the given ID can be found.
object GetPartyMemberByFactionId(int id);

// Makes pc rejoin his party, if any.
// Returns true if a rejoin will happen.
int CycleParty(object pc);


int GetPartyFactionId(object pc)
{
	if (!is_pc(pc) || GetNumberPartyMembers(pc) < 2)
		return 0;

	int faction = GetFactionId(pc);
	int other_faction = 0;

	iterate_players(oIterate,

	if (oIterate != pc) {
	other_faction = GetFactionId(pc);

		if (other_faction == faction)
			break;
	}
				   );

	return other_faction;
}

object GetPartyMemberByFactionId(int id)
{
	iterate_players(oIterate,

					if (GetFactionId(oIterate) == id)
					return oIterate;
				   );

	return OBJECT_INVALID;
}


int CycleParty(object pc)
{
	int fid = GetPartyFactionId(pc);

	if (fid) {
		RemoveFromParty(pc);
		object other = GetPartyMemberByFactionId(fid);

		if (GetIsObjectValid(other)) {
			other = GetFactionLeader(other);
			// Delay for 1 second or we'd get black portraits and no names.
			DelayCommand(1.0, AddToParty(pc, other));
		}
	}

	return fid != 0;
}
