/*
 * This script allows jumping from one jump target to the next,
 * making appropriate DCs and appropriate results on failure.
 */
__sp_extern("_gen")

/*
 * 	Rules:
 * 		Climb Placies:
 *        DC = DC_CLIMB_UP/DOWN_ADJUST +
 *               specified as by DM (through placeable)
 *
 * 		Jump Placies:
 * 		  DC = Distance + Elevation in ft * 4
 */

#define DC_SKILL SKILL_TUMBLE

#define BASE_DC_JUMP 10
#define BASE_DC_CLIMB 0

#define DC_ROPE_ADJUST -1
#define DC_ROPEHOOK_ADJUST -2

#define DC_CLIMB_UP_ADJUST 0
#define DC_CLIMB_DOWN_ADJUST 0

#define DC_CLIMB_MIN 1
#define DC_CLIMB_MAX 50


void main() {
	object oJumper = GetLastUsedBy();

	string sResRef = GetResRef(OBJECT_SELF);
	string name = GetName(OBJECT_SELF);

	object oTarget = GetNearestObjectByTag(sResRef);


	int has_rope = GetIsObjectValid(GetItemPossessedBy(oJumper, "rope"));
	int has_hook = GetIsObjectValid(GetItemPossessedBy(oJumper, "hook"));
	


	if ( !GetIsObjectValid(oTarget) ) {
		SpeakString("Kein Zielpunkt in der Naehe.");
		return;
	}

	// 3.28: feet!
	float fDistance = GetDistanceBetween(OBJECT_SELF, oTarget) * 3.28;
	float fElevation = GetElevationBetween(OBJECT_SELF, oTarget) * 3.28;
	
	// 1 = up, 0 = down
	int climbing_up = (fElevation > 0.0);

	int nDC = 0;

	if ( "pjump" == sTag ) {
		
		nDC = BASE_DC_JUMP;

		nDC += abs(FloatToInt(fDistance)) +
			   FloatToInt(fElevation * 4); // can have neg values: jumping down is easier!

	} else if ( "pclimb" == sTag ) {
		
		nDC = BASE_DC_CLIMB;

		nDC += (climbing_up ? DC_CLIMB_UP_ADJUST : DC_CLIMB_DOWN_ADJUST);

		// Racial Bonus.
		if (RACIAL_TYPE_HALFLING == GetRacialType(oJumper))
			nDC += 2;

		if (has_rope && has_hook)
			nDC += DC_ROPEHOOK_ADJUST;
		else if (has_rope)
			nDC += DC_ROPE_ADJUST;

		nDC += GetLocalInt(OBJECT_SELF, "dc");

		nDC = clamp(nDC, DC_CLIMB_MIN, DC_CLIMB_MAX);

	} else {
		SpeakString("Unnown plasie, dis. Do no now wad do do! :(");
		return;
	}
	
	
	SendMessageToPC(oJumper, "SG fuer diesen Kletterpunkt: " + itoa(nDC));
	SendMessageToPC(oJumper, "Distanz (in Fuss): " + FloatToString(fDistance));
	SendMessageToPC(oJumper, "Erhoehung (in Fuss): " + FloatToString(fElevation));

	
	int player_skill = GetSkillRank(DC_SKILL, oJumper);

	// Jump/Climb not possible.
	if (10 + player_skill < nDC) {
		SendMessageToPC(oJumper, name + " Take10: (10 + " + itoa(player_skill) + " vs " + itoa(nDC) + "): Nope.");
		return;
	}


	
	// no aq exploits
	AssignCommand(oJumper, ClearAllActions());


	SendMessageToPC(oJumper, name + " Take10: Erfolg.");
	AssignCommand(oJumper, JumpToObject(oTarget));
}
