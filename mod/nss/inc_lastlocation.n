#include "inc_pgsql.nh"
__sp_extern("inc_cdb")

const string
	TABLE_LASTLOCATION = "last_location";

location GetLastLocationOnLogout(object oPC);
void SetLastLocation(object oPC);

location GetLastLocationOnLogout(object oPC) {
	int id = GetCharacterID(oPC);
	location ret;

	if (!id)
		return GetLocation(oPC);

	pQ("select x,y,z,area from " + TABLE_LASTLOCATION + " where cid = " + IntToString(id) + ";");
	if (pF()) {
		vector position = Vector(pGf(1), pGf(2), pGf(3));
		object area = GetObjectByTag(pGs(5));
		if (!GetIsObjectValid(area))
			return GetLocation(oPC);
		ret = Location(area, position, 0.0);
	}

	return ret;
}


void SetLastLocation(object oPC) {
	int id = GetCharacterID(oPC);
	if (!id)
		return;

	string area = GetTag(GetArea(oPC));
	vector p = GetPosition(oPC);

	pQ("select id from " + TABLE_LASTLOCATION + " where cid = " + IntToString(id) + ";");
	if (pF()) {
		pQ("update " + TABLE_LASTLOCATION + " set " +
		"x = " + pSf(p.x) + ", " + 
		"y = " + pSf(p.y) + ", " + 
		"z = " + pSf(p.z) + ", " + 
		"area = " + pSs(area) + " " + 
		"where cid = " + IntToString(id) + ";");
	} else {
		pQ("insert into " + TABLE_LASTLOCATION + " (cid,area,x,y,z) values(" +
			pSi(id) + ", " +
			pSs(area) + ", " +
			pSf(p.x) + ", " + 
			pSf(p.y) + ", " + 
			pSf(p.z) + 
		")");
	}
}
