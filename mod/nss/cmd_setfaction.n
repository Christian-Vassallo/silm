extern("inc_target")
extern("inc_scorco")
extern("inc_cdb")
extern("inc_inventory")
extern("inc_getopt")

void main() {
	struct EventInfo e = GetEventInfo();

	if (e.ev != "chat_command")
		return;

	if (!amask(e.runnable, AMASK_GLOBAL_GM))
		return;
	
	struct EventArguments ea = GetEventArguments(e.serial);

	// settagfaction <tag> <faction>
	if (ea.a0 == "tagfaction") {
		getopt_reset();
		if (!getopt_init(ea.a1, " "))
			event_fail_stop();

		int argc = getopt_argc();
		if (argc != 2) {
			SendMessageToPC(e.runnable, "Syntax: <tag> <factionId>");
			event_stop_end();
		}

		int faction = atoi(getopt_arg(1));
		if (faction < 1 || faction >= 100) {
			SendMessageToPC(e.runnable, "<factionId> needs to be > 1 && < 100");
			event_stop_end();
		}
		
		string tag = strlwr(getopt_arg(0));

		int matched = 0;

		iterate_area(GetArea(e.runnable), i,
			if (is_creature(i) && !GetIsPC(i) &&
					strlwr(GetTag(i)) == tag) {
				SetFactionId(i, faction);
				SendMessageToPC(e.runnable, otoa(i) +
					" => faction(" + itoa(faction) + ")");
				matched++;
			}
		);

		SendMessageToPC(e.runnable, "Updated " + itoa(matched) + " objects.");

		event_stop();
	}
}

