extern("inc_colors")
#define col_to_i(c) (c.r * 0x100 * 0x100 + c.g * 0x100 + c.b)
struct Color i_to_col(int i) {
	struct Color c;
	c.b = i % 0x100; i /= 0x100;
	c.g = i % 0x100; i /= 0x100;
	c.r = i % 0x100;
	return c;
}

#define CSPACE 10648000

string MyRainbowText(string sText, int nStepSize = 2, int bCheatCloseTags = TRUE) {
	int nEachLetter = GetStringLength(sText) / nStepSize;
	
	int step = CSPACE/(GetStringLength(sText)/nEachLetter);
	SendMessageToPC(OBJECT_SELF, "step = " + itoa(step));

	string sOut = "", sMed = "";

	int i = 0;

	struct Color col;

	for ( i = 0; i < nEachLetter; i += nEachLetter ) {
		sMed = GetSubString(sText, i, nEachLetter);

		SendMessageToPC(OBJECT_SELF, "step i  = " + itoa(i) + " = " + itoa(step * i));
		col = i_to_col(step * nEachLetter);

		sOut += ColorTag(col) + sMed;
		if ( !bCheatCloseTags )
			sOut += ColorTagClose();
	}
	return sOut;
}

void main() {
	SendMessageToPC(OBJECT_SELF, MyRainbowText("This is a test-string that is long enough to co."));
}
