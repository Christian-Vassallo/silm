extern("inc_cdb")
extern("inc_xp_handling")
//extern("_map")
extern("_gen")

/*
 * NB: Variables which are saved during character export MUST
 * be DeleteLocalInt()'ed during load because SetLocalInt doesn't
 * work during save, dirtying the cache.
 */

void restore_lp(object oPC, int iCurrentLP) {
	if ( iCurrentLP > -900 && !GetLocalInt(oPC, "IS_DEAD") && !GetIsDead(oPC) ) {
		int iDiff = GetCurrentHitPoints(oPC) - iCurrentLP;
		if ( iDiff > 0 )
			ApplyEffectToObject(DURATION_TYPE_INSTANT,
				EffectDamage(iDiff, DAMAGE_TYPE_MAGICAL, DAMAGE_POWER_PLUS_FIVE), oPC);
		else if ( iDiff < 0 )
			ApplyEffectToObject(DURATION_TYPE_INSTANT,
				EffectHeal(-iDiff), oPC);
	}
}


void save_player(object oPC, int autosave = FALSE) {
	if ( !GetIsPC(oPC) || GetIsDM(oPC) )
		return;

	SetLegacyPersistentInt(oPC, "Current_LP", GetCurrentHitPoints(oPC) + 1000, 1);

	/* DONT save polymorphed characters. That re-applies the polymorph effect
	 * and thus the visuals, and re-sets the TP to Max + 10 */
	int iPolymorphed = GetIsPolymorphed(oPC);
	if ( !iPolymorphed ) {
		ExportSingleCharacter(oPC);
		SaveCharacter(oPC, 0);
	}

	if ( autosave == TRUE )
		DelayCommand(100.0, save_player(oPC, autosave));
}

void load_player(object oPC) {
	if ( !GetIsPC(oPC) || GetIsDM(oPC) )
		return;

	DeleteLocalInt(oPC, "PER_XP_Combat");
	DeleteLocalInt(oPC, "PER_Current_LP");
	DeleteLocalInt(oPC, "PER_XP_Combat_cap_num");
	DeleteLocalInt(oPC, "PER_XP_Combat_cap_month");

	int iCurrentLP     = GetLegacyPersistentInt(oPC, "Current_LP") - 1000;

	if ( iCurrentLP < 0 && iCurrentLP > -900 ) {
		WriteTimestampedLogEntry(GetName(oPC) + ": Login with " +
			IntToString(iCurrentLP) + " LP!");
		iCurrentLP = 1;
		XP_LoseXP(oPC, GetXP(oPC) / 10, TRUE, TRUE);
	}
	DelayCommand(( ( iCurrentLP > 0 ) ? 1.2f : 7.0f ), restore_lp(oPC, iCurrentLP));

	//Allow summoning of animal companion or familiar for the cases the creature
	//was gone because of logout or crash
	IncrementRemainingFeatUses(oPC, FEAT_ANIMAL_COMPANION);
	IncrementRemainingFeatUses(oPC, FEAT_SUMMON_FAMILIAR);
}

